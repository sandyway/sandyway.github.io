import{e as l}from"./index.Bn_1hBZy.js";import{g as S}from"./index.xnbdEWk_.js";import{a as p}from"./apiInterceptor.ovEtsaVg.js";const v=async(e="",i=null,o=!1)=>{let t=null;const n=await p(`${l}/api/models${o?"/base":""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(t=s,console.log(s),null));if(t)throw t;let a=(n==null?void 0:n.data)??[];if(i&&!o){let s=[];if(i){const r=i.OPENAI_API_BASE_URLS,d=i.OPENAI_API_KEYS,y=i.OPENAI_API_CONFIGS,h=[];for(const u in r){const f=r[u];if(u.toString()in y){const j=y[u.toString()]??{},m=(j==null?void 0:j.enable)??!0,$=(j==null?void 0:j.model_ids)??[];if(m)if($.length>0){const w={object:"list",data:$.map(A=>({id:A,name:A,owned_by:"openai",openai:{id:A},urlIdx:u}))};h.push((async()=>w)())}else h.push((async()=>await S(f,d[u]).then(w=>w).catch(w=>({object:"list",data:[],urlIdx:u})))());else h.push((async()=>({object:"list",data:[],urlIdx:u}))())}}const g=await Promise.all(h);for(const u in g){const f=g[u],j=y[u.toString()]??{};let m=Array.isArray(f)?f:(f==null?void 0:f.data)??[];m=m.map(w=>({...w,openai:{id:w.id},urlIdx:u}));const $=j.prefix_id;if($)for(const w of m)w.id=`${$}.${w.id}`;s=s.concat(m)}}a=a.concat(s.map(r=>({...r,name:(r==null?void 0:r.name)??(r==null?void 0:r.id),direct:!0})));const c={};for(const r of a)c[r.id]=r;a=Object.values(c)}return a},E=async(e,i,o)=>{let t=null;const n=await p(`${l}/api/chat/actions/${i}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(o)}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?t=a.detail:t=a,null));if(t)throw t;return n},C=async(e,i)=>({}),b=async(e="")=>{let i=null;const o=await p(`${l}/api/v1/tasks/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),i=t,null));if(i)throw i;return o},I=async(e,i)=>{let o=null;const t=await p(`${l}/api/v1/tasks/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(i)}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?o=n.detail:o=n,null));if(o)throw o;return t},k=async(e="",i,o,t)=>{var s,c;let n=null;const a=await p(`${l}/api/v1/tasks/tags/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,messages:o,...t&&{chat_id:t}})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),"detail"in r&&(n=r.detail),null));if(n)throw n;try{const d=(((c=(s=a==null?void 0:a.choices[0])==null?void 0:s.message)==null?void 0:c.content)??"").replace(/['‘’`]/g,'"'),y=d.indexOf("{"),h=d.lastIndexOf("}");if(y!==-1&&h!==-1){const g=d.substring(y,h+1),u=JSON.parse(g);return u&&u.tags?Array.isArray(u.tags)?u.tags:[]:[]}return[]}catch(r){return console.error("Failed to parse response: ",r),[]}},B=async(e="",i,o,t)=>{var c,r;let n=null;const a=await p(`${l}/api/v1/tasks/emoji/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,prompt:o,...t&&{chat_id:t}})}).then(async d=>{if(!d.ok)throw await d.json();return d.json()}).catch(d=>(console.log(d),"detail"in d&&(n=d.detail),null));if(n)throw n;const s=((r=(c=a==null?void 0:a.choices[0])==null?void 0:c.message)==null?void 0:r.content.replace(/["']/g,""))??null;return s&&new RegExp("\\p{Extended_Pictographic}","u").test(s)?s.match(new RegExp("\\p{Extended_Pictographic}","gu"))[0]:null},x=async(e="",i,o,t,n="search query")=>{var d,y;const a=new AbortController;let s=null;const c=await p(`${l}/api/v1/tasks/auto/completions`,{signal:a.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,prompt:o,...t&&{messages:t},type:n,stream:!1})}).then(async h=>{if(!h.ok)throw await h.json();return h.json()}).catch(h=>(console.log(h),"detail"in h&&(s=h.detail),null));if(s)throw s;const r=((y=(d=c==null?void 0:c.choices[0])==null?void 0:d.message)==null?void 0:y.content)??"";try{const h=r.indexOf("{"),g=r.lastIndexOf("}");if(h!==-1&&g!==-1){const u=r.substring(h,g+1),f=JSON.parse(u);return f&&f.text?f.text:""}return r}catch(h){return console.error("Failed to parse response: ",h),r}},z=async(e="",i,o,t)=>{const n=new AbortController;let a=null;const s=await p(`${l}/api/v1/tasks/moa/completions`,{signal:n.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,prompt:o,responses:t,stream:!0})}).catch(c=>(console.log(c),a=c,null));if(a)throw a;return[s,n]},N=async(e="")=>{let i=null;const o=await p(`${l}/api/v1/pipelines/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),i=n,null));if(i)throw i;return(o==null?void 0:o.data)??[]},_=async(e,i,o)=>{let t=null;const n=new FormData;n.append("file",i),n.append("urlIdx",o);const a=await p(`${l}/api/v1/pipelines/upload`,{method:"POST",headers:{...e&&{authorization:`Bearer ${e}`}},body:n}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),"detail"in s?t=s.detail:t=s,null));if(t)throw t;return a},G=async(e,i,o)=>{let t=null;const n=await p(`${l}/api/v1/pipelines/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({url:i,urlIdx:o})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?t=a.detail:t=a,null));if(t)throw t;return n},J=async(e,i,o)=>{let t=null;const n=await p(`${l}/api/v1/pipelines/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({id:i,urlIdx:o})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?t=a.detail:t=a,null));if(t)throw t;return n},U=async(e,i)=>{let o=null;const t=new URLSearchParams;i!==void 0&&t.append("urlIdx",i);const n=await p(`${l}/api/v1/pipelines/?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),o=s,null));if(o)throw o;return(n==null?void 0:n.data)??[]},L=async(e,i,o)=>{let t=null;const n=new URLSearchParams;o!==void 0&&n.append("urlIdx",o);const a=await p(`${l}/api/v1/pipelines/${i}/valves?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),t=s,null));if(t)throw t;return a},R=async(e,i,o)=>{let t=null;const n=new URLSearchParams;o!==void 0&&n.append("urlIdx",o);const a=await p(`${l}/api/v1/pipelines/${i}/valves/spec?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),t=s,null));if(t)throw t;return a},F=async(e="",i,o,t)=>{let n=null;const a=new URLSearchParams;t!==void 0&&a.append("urlIdx",t);const s=await p(`${l}/api/v1/pipelines/${i}/valves/update?${a.toString()}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(o)}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(console.log(c),"detail"in c?n=c.detail:n=c,null));if(n)throw n;return s},M=async()=>{let e=null;const i=await p(`${l}/api/config`,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o,null));if(e)throw e;return i},D=async()=>{let e=null;const i=await p(`${l}/api/changelog`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),e=o,null));if(e)throw e;return i},V=async e=>{let i=null;const o=await p(`${l}/api/version/updates`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),i=t,null));if(i)throw i;return o},q=async e=>{let i=null;const o=await p(`${l}/api/webhook`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),i=t,null));if(i)throw i;return o.url},W=async(e,i)=>{let o=null;const t=await p(`${l}/api/webhook`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({url:i})}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),o=n,null));if(o)throw o;return t.url};export{M as a,k as b,q as c,V as d,N as e,F as f,v as g,R as h,L as i,U as j,G as k,J as l,_ as m,b as n,I as o,D as p,x as q,B as r,E as s,C as t,W as u,z as v};
//# sourceMappingURL=index.NocVRDio.js.map
