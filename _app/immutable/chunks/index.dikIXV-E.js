import{I as i}from"./index.Bn_1hBZy.js";import{a as r}from"./apiInterceptor.ovEtsaVg.js";const s=async(a="")=>{let t=null;const e=await r(`${i}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?t=n.detail:t="Server connection failed",null));if(t)throw t;return e},h=async(a="",t)=>{let e=null;const n=await r(`${i}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({...t})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),"detail"in o?e=o.detail:e="Server connection failed",null));if(e)throw e;return n},p=async(a="")=>{let t=null;const e=await r(`${i}/config/url/verify`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?t=n.detail:t="Server connection failed",null));if(t)throw t;return e},u=async(a="")=>{let t=null;const e=await r(`${i}/image/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?t=n.detail:t="Server connection failed",null));if(t)throw t;return e},f=async(a="",t)=>{let e=null;const n=await r(`${i}/image/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({...t})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),"detail"in o?e=o.detail:e="Server connection failed",null));if(e)throw e;return n},d=async(a="")=>{let t=null;const e=await r(`${i}/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?t=n.detail:t="Server connection failed",null));if(t)throw t;return e},g=async(a="",t)=>{let e=null;const n=await r(`${i}/generations`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...a&&{authorization:`Bearer ${a}`}},body:JSON.stringify({prompt:t})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),"detail"in o?e=o.detail:e="Server connection failed",null));if(e)throw e;return n};export{u as a,d as b,f as c,s as g,g as i,h as u,p as v};
//# sourceMappingURL=index.dikIXV-E.js.map
