import{e as p,g as l}from"./index.Bn_1hBZy.js";import{a as r}from"./apiInterceptor.ovEtsaVg.js";const w=async(s="")=>{let e=null;const o=await r(`${l}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...s&&{authorization:`Bearer ${s}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?e=n.detail:e="Server connection failed",null));if(e)throw e;return o},d=async(s="",e)=>{let o=null;const n=await r(`${l}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...s&&{authorization:`Bearer ${s}`}},body:JSON.stringify({...e})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o="Server connection failed",null));if(o)throw o;return n},f=async(s,e)=>{let o=null;const n=await r(`${s}/models`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var a;return o=`OpenAI: ${((a=t==null?void 0:t.error)==null?void 0:a.message)??"Network Problem"}`,[]});if(o)throw o;return n},y=async(s,e)=>{let o=null;const n=await r(`${l}/models${typeof e=="number"?`/${e}`:""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...s&&{authorization:`Bearer ${s}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>{var a;return o=`OpenAI: ${((a=t==null?void 0:t.error)==null?void 0:a.message)??"Network Problem"}`,[]});if(o)throw o;return n},m=async(s="",e="https://api.openai.com/v1",o="",n=!1)=>{if(!e)throw"OpenAI: URL is required";let t=null,a=null;if(n){if(a=await r(`${e}/models`,{method:"GET",headers:{Accept:"application/json",Authorization:`Bearer ${o}`,"Content-Type":"application/json"}}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>{var c;return t=`OpenAI: ${((c=i==null?void 0:i.error)==null?void 0:c.message)??"Network Problem"}`,[]}),t)throw t}else if(a=await r(`${l}/verify`,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${s}`,"Content-Type":"application/json"},body:JSON.stringify({url:e,key:o})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>{var c;return t=`OpenAI: ${((c=i==null?void 0:i.error)==null?void 0:c.message)??"Network Problem"}`,[]}),t)throw t;return a},j=async(s="",e,o=`${p}/api`)=>{const n=new AbortController;let t=null;const a=await r(`${o}/chat/completions`,{signal:n.signal,method:"POST",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"},body:JSON.stringify(e)}).catch(i=>(console.log(i),t=i,null));if(t)throw t;return[a,n]},A=async(s="",e,o=`${p}/api`)=>{let n=null;const t=await r(`${o}/chat/completions`,{method:"POST",headers:{Authorization:`Bearer ${s}`,"Content-Type":"application/json"},body:JSON.stringify(e)}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(n=`${(a==null?void 0:a.detail)??a}`,null));if(n)throw n;return t};export{w as a,y as b,j as c,A as d,f as g,d as u,m as v};
//# sourceMappingURL=index.xnbdEWk_.js.map
