import{A as s}from"./index.Bn_1hBZy.js";import{a as c}from"./apiInterceptor.ovEtsaVg.js";const u=async e=>{let o=null;const n=await c(`${s}/config`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),o=t.detail,null));if(o)throw o;return n},p=async(e,o)=>{let n=null;const t=await c(`${s}/config/update`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({...o})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),n=a.detail,null));if(n)throw n;return t},d=async(e,o)=>{const n=new FormData;n.append("file",o);let t=null;const a=await c(`${s}/transcriptions`,{method:"POST",headers:{Accept:"application/json",authorization:`Bearer ${e}`},body:n}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(t=r.detail,console.log(r),null));if(t)throw t;return a},w=async(e="",o="alloy",n="",t)=>{let a=null;const r=await c(`${s}/speech`,{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({input:n,voice:o,...t})}).then(async i=>{if(!i.ok)throw await i.json();return i}).catch(i=>(a=i.detail,console.log(i),null));if(a)throw a;return r},y=async(e="")=>{let o=null;const n=await c(`${s}/models`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(o=t.detail,console.log(t),null));if(o)throw o;return n},f=async(e="")=>{let o=null;const n=await c(`${s}/voices`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(o=t.detail,console.log(t),null));if(o)throw o;return n};export{y as a,f as b,u as g,w as s,d as t,p as u};
//# sourceMappingURL=index.CxblQe6a.js.map
