import{O as r}from"./index.Bn_1hBZy.js";import{a as c}from"./apiInterceptor.ovEtsaVg.js";const u=async(e="",l="",o="")=>{let n=null;const t=await c(`${r}/verify`,{method:"POST",headers:{Accept:"application/json",Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify({url:l,key:o})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>{var i;return n=`Ollama: ${((i=a==null?void 0:a.error)==null?void 0:i.message)??"Network Problem"}`,[]});if(n)throw n;return t},h=async(e="")=>{let l=null;const o=await c(`${r}/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),"detail"in n?l=n.detail:l="Server connection failed",null));if(l)throw l;return o},d=async(e="",l)=>{let o=null;const n=await c(`${r}/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({...l})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o="Server connection failed",null));if(o)throw o;return n},f=async(e,l)=>{let o=null;const n=await c(`${r}/api/version`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o="Server connection failed",null));if(o)throw o;return(n==null?void 0:n.version)??!1},y=async(e="",l=null)=>{let o=null;const n=await c(`${r}/api/tags${l!==null?`/${l}`:""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),"detail"in t?o=t.detail:o="Server connection failed",null));if(o)throw o;return((n==null?void 0:n.models)??[]).map(t=>({id:t.model,name:t.name??t.model,...t})).sort((t,a)=>t.name.localeCompare(a.name))},w=async(e,l,o=null)=>{let n=null;const t=await c(`${r}/api/create${o!==null?`/${o}`:""}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify(l)}).catch(a=>(n=a,null));if(n)throw n;return t},m=async(e,l,o=null)=>{let n=null;const t=await c(`${r}/api/delete${o!==null?`/${o}`:""}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({name:l})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).then(a=>(console.log(a),!0)).catch(a=>(console.log(a),n=a,"detail"in a&&(n=a.detail),null));if(n)throw n;return t},$=async(e,l,o=null)=>{let n=null;const t=new AbortController,a=await c(`${r}/api/pull${o!==null?`/${o}`:""}`,{signal:t.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({name:l})}).catch(i=>(console.log(i),n=i,"detail"in i&&(n=i.detail),null));if(n)throw n;return[a,t]},j=async(e,l,o=null)=>{let n=null;const t=await c(`${r}/models/download${o!==null?`/${o}`:""}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({url:l})}).catch(a=>(console.log(a),n=a,"detail"in a&&(n=a.detail),null));if(n)throw n;return t},g=async(e,l,o=null)=>{let n=null;const t=new FormData;t.append("file",l);const a=await c(`${r}/models/upload${o!==null?`/${o}`:""}`,{method:"POST",headers:{Authorization:`Bearer ${e}`},body:t}).catch(i=>(console.log(i),n=i,"detail"in i&&(n=i.detail),null));if(n)throw n;return a};export{y as a,j as b,w as c,m as d,h as e,d as f,f as g,$ as p,g as u,u as v};
//# sourceMappingURL=index.Dm7MFL02.js.map
